
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author trkgrn
 */
public class Musteri extends javax.swing.JFrame {

    private String musteriTc;
    private int kisiId;
    private User user;
    private int musteri_id;
    private int temsilci_id; // musterinin bagli oldugu temsilci

    /**
     * Creates new form Musteri
     */
    public Musteri() {
        initComponents();
        setVisible(true);
    }

    public Musteri(String musteriTc, int kisiId) {
        initComponents();
        Tarih.getInstance();

        tarihLabel.setText(Tarih.myFormat.format(Tarih.getAnlikTarih()));
        setVisible(true);
        this.musteriTc = musteriTc;
        this.kisiId = kisiId;
        DBislem db = new DBislem();
        String sorgu = "SELECT *FROM kisi k,musteri m, temsilcinin_musterileri tm where tc_no='" + musteriTc + "' and k.kisi_id=m.kisi_id and m.musteri_id=tm.musteri_id";
        user = db.getMusteri(sorgu, this);
        temsilci_id = user.getMusterinin_temsilci_id();
        musteri_id = user.getMusteri_id();

        TabloIslem.getInstance().showKrediTalepTable(talepTable, user.getMusteri_id(), user.getMusterinin_temsilci_id());
        TabloIslem.getInstance().showHesapTable(hesapTable, user.getMusteri_id());
        TabloIslem.getInstance().showKrediOdemeTable(krediOdemeleriTable, musteri_id, 0, 1);
        TabloIslem.getInstance().showIslemTable(islemTable, musteri_id, 1,0);
        TabloIslem.getInstance().showKrediOdemeGecmisTable(odemeGecmisTable, musteri_id);
        ComboBoxIslem.getComboData(hesaplarComboBox, "SELECT * from hesaplar where musteri_id=" + musteri_id, "hesap_adi");
        ComboBoxIslem.getComboData(krediHesapComboBox, "SELECT * FROM hesaplar h, hesap_turu ht"
                + " WHERE h.musteri_id = " + musteri_id + " and"
                + " h.hesap_tur_id = ht.hesap_tur_id and"
                + " para_birim_id = 1", "hesap_adi");
        initProfile();
        initHesap();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel11 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jScrollBar1 = new javax.swing.JScrollBar();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        musteriAdTF = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        musteriSoyadTF = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        musteriTcnoTF = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        musteriTelefonTF = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        musteriMailTF = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        musteriAdresTF = new javax.swing.JTextField();
        toplamGelirTF = new javax.swing.JTextField();
        toplamBakiyeTF = new javax.swing.JTextField();
        duzenleButton = new javax.swing.JButton();
        kaydetButton = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        toplamGiderTF = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        jPanel17 = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        islemMiktarTF = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        kaynakComboBox = new javax.swing.JComboBox<>();
        paraCekButton = new javax.swing.JButton();
        paraYatirButton = new javax.swing.JButton();
        transferButton = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        hedefComboBox = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        hesapTable = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        hesapTalepTable = new javax.swing.JTable();
        jLabel19 = new javax.swing.JLabel();
        hesapAdTF = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        hesapTurComboBox = new javax.swing.JComboBox<>();
        hesapOlusturmaTalepButton = new javax.swing.JButton();
        hesapTalepSilButton = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        hesapTable2 = new javax.swing.JTable();
        hesapSilTalepButton = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        krediTalepTabbedPane = new javax.swing.JTabbedPane();
        jPanel11 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        krediOdemeleriTable = new javax.swing.JTable();
        odemeButton = new javax.swing.JButton();
        jLabel22 = new javax.swing.JLabel();
        hesaplarComboBox = new javax.swing.JComboBox<>();
        jLabel23 = new javax.swing.JLabel();
        krediNoTF = new javax.swing.JTextField();
        tumBorcButton = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        krediTalepMiktarTF = new javax.swing.JTextField();
        talepButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        talepTable = new javax.swing.JTable();
        toplamAyTF = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        talepSilButton = new javax.swing.JButton();
        jLabel24 = new javax.swing.JLabel();
        krediHesapComboBox = new javax.swing.JComboBox<>();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        odemeGecmisTable = new javax.swing.JTable();
        jScrollPane6 = new javax.swing.JScrollPane();
        islemTable = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        tarihLabel = new javax.swing.JLabel();
        logoutLabel = new javax.swing.JLabel();

        jLabel11.setFont(new java.awt.Font("Noto Sans Cond", 1, 18)); // NOI18N
        jLabel11.setText("Ad");

        jTextField2.setText("jTextField1");

        jLabel13.setFont(new java.awt.Font("Noto Sans Cond", 1, 18)); // NOI18N
        jLabel13.setText("Ad");

        jTextField4.setText("jTextField1");

        jLabel15.setFont(new java.awt.Font("Noto Sans Cond", 1, 18)); // NOI18N
        jLabel15.setText("Ad");

        jTextField6.setText("jTextField1");

        jLabel2.setText("jLabel2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Noto Sans Cond", 1, 18)); // NOI18N
        jLabel1.setText("Ad");

        jLabel7.setFont(new java.awt.Font("Noto Sans Cond", 1, 18)); // NOI18N
        jLabel7.setText("Toplam Gelir");

        jLabel9.setFont(new java.awt.Font("Noto Sans Cond", 1, 18)); // NOI18N
        jLabel9.setText("Toplam Bakiye");

        musteriAdTF.setEditable(false);
        musteriAdTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                musteriAdTFActionPerformed(evt);
            }
        });
        musteriAdTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                musteriAdTFKeyTyped(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Noto Sans Cond", 1, 18)); // NOI18N
        jLabel12.setText("Soyad");

        musteriSoyadTF.setEditable(false);
        musteriSoyadTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                musteriSoyadTFKeyTyped(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Noto Sans Cond", 1, 18)); // NOI18N
        jLabel14.setText("TCK No");

        musteriTcnoTF.setEditable(false);
        musteriTcnoTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                musteriTcnoTFActionPerformed(evt);
            }
        });
        musteriTcnoTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                musteriTcnoTFKeyTyped(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Noto Sans Cond", 1, 18)); // NOI18N
        jLabel16.setText("Telefon No");

        musteriTelefonTF.setEditable(false);
        musteriTelefonTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                musteriTelefonTFKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                musteriTelefonTFKeyTyped(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Noto Sans Cond", 1, 18)); // NOI18N
        jLabel17.setText("E-Posta");

        musteriMailTF.setEditable(false);
        musteriMailTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                musteriMailTFActionPerformed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Noto Sans Cond", 1, 18)); // NOI18N
        jLabel18.setText("Adres");

        musteriAdresTF.setEditable(false);

        toplamGelirTF.setEditable(false);

        toplamBakiyeTF.setEditable(false);

        duzenleButton.setFont(new java.awt.Font("Open Sans", 1, 10)); // NOI18N
        duzenleButton.setText("Düzenle");
        duzenleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                duzenleButtonActionPerformed(evt);
            }
        });

        kaydetButton.setFont(new java.awt.Font("Open Sans", 1, 10)); // NOI18N
        kaydetButton.setText("Kaydet");
        kaydetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kaydetButtonActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Noto Sans Cond", 1, 18)); // NOI18N
        jLabel8.setText("Toplam Gider");

        toplamGiderTF.setEditable(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(musteriTelefonTF, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel17)
                                        .addGap(68, 68, 68)
                                        .addComponent(musteriMailTF, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel12)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addGap(114, 114, 114)
                                            .addComponent(musteriSoyadTF, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel14)
                                        .addGap(68, 68, 68)
                                        .addComponent(musteriTcnoTF, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addGap(68, 68, 68)
                                        .addComponent(musteriAdTF, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(118, 118, 118))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(duzenleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(90, 90, 90)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(jLabel18)
                        .addGap(40, 40, 40)
                        .addComponent(musteriAdresTF, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(kaydetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addGap(18, 18, 18)
                        .addComponent(toplamBakiyeTF))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(toplamGelirTF))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(toplamGiderTF)))
                .addContainerGap(86, Short.MAX_VALUE))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {musteriAdTF, musteriMailTF, musteriSoyadTF, musteriTcnoTF, musteriTelefonTF});

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {duzenleButton, kaydetButton});

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(32, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(musteriMailTF, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(musteriAdTF, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(4, 4, 4)
                                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(musteriSoyadTF, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(musteriTcnoTF, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(27, 27, 27)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(musteriTelefonTF, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(musteriAdresTF, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(28, 28, 28)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(29, 29, 29))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(toplamGiderTF)
                                        .addGap(18, 18, 18)))
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(toplamGelirTF, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(toplamBakiyeTF, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(17, 17, 17)))
                .addGap(32, 32, 32)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(duzenleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(kaydetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(60, 60, 60))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {musteriAdTF, musteriMailTF, musteriSoyadTF, musteriTcnoTF, musteriTelefonTF, toplamBakiyeTF, toplamGelirTF});

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {duzenleButton, kaydetButton});

        jTabbedPane1.addTab("Profilim", jPanel2);

        jTabbedPane3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane3MouseClicked(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Noto Sans Cond", 1, 18)); // NOI18N
        jLabel5.setText("Miktar");

        islemMiktarTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                islemMiktarTFActionPerformed(evt);
            }
        });
        islemMiktarTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                islemMiktarTFKeyTyped(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Noto Sans Cond", 1, 18)); // NOI18N
        jLabel6.setText("Kaynak Hesap");

        kaynakComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<Seçiniz>"}));
        kaynakComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kaynakComboBoxActionPerformed(evt);
            }
        });

        paraCekButton.setFont(new java.awt.Font("Open Sans", 1, 10)); // NOI18N
        paraCekButton.setText("Para Çek");
        paraCekButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paraCekButtonActionPerformed(evt);
            }
        });

        paraYatirButton.setFont(new java.awt.Font("Open Sans", 1, 10)); // NOI18N
        paraYatirButton.setText("Para Yatır");
        paraYatirButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paraYatirButtonActionPerformed(evt);
            }
        });

        transferButton.setFont(new java.awt.Font("Open Sans", 1, 10)); // NOI18N
        transferButton.setText("Transfer");
        transferButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transferButtonActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Noto Sans Cond", 1, 18)); // NOI18N
        jLabel10.setText("Hedef Hesap");

        hedefComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<Seçiniz>"}));
        hedefComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hedefComboBoxActionPerformed(evt);
            }
        });

        hesapTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Hesap No", "Hesap Adı", "Hesap Türü", "Hesap Bakiyesi"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(hesapTable);
        if (hesapTable.getColumnModel().getColumnCount() > 0) {
            hesapTable.getColumnModel().getColumn(0).setResizable(false);
            hesapTable.getColumnModel().getColumn(1).setResizable(false);
            hesapTable.getColumnModel().getColumn(2).setResizable(false);
            hesapTable.getColumnModel().getColumn(3).setResizable(false);
        }

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel15Layout.createSequentialGroup()
                                    .addGap(31, 31, 31)
                                    .addComponent(jLabel5))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                                    .addGap(12, 12, 12)
                                    .addComponent(jLabel10)))
                            .addComponent(jLabel6))
                        .addGap(35, 35, 35)
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(islemMiktarTF)
                                .addComponent(kaynakComboBox, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(hedefComboBox, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(101, 101, 101)
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(paraCekButton, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(paraYatirButton, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(68, 68, 68)
                        .addComponent(transferButton, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 198, Short.MAX_VALUE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );

        jPanel15Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {hedefComboBox, kaynakComboBox});

        jPanel15Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {paraCekButton, paraYatirButton});

        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(islemMiktarTF, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(kaynakComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(hedefComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(paraCekButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(paraYatirButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addComponent(transferButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        jPanel15Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {hedefComboBox, kaynakComboBox});

        jPanel15Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {paraCekButton, paraYatirButton});

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane3.addTab("Para İşlemleri", jPanel17);

        jPanel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel7MouseClicked(evt);
            }
        });

        hesapTalepTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Talep No", "Müşteri No", "Talep Türü", "Hesap Adı", "Hesap Türü", "Durum"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(hesapTalepTable);
        if (hesapTalepTable.getColumnModel().getColumnCount() > 0) {
            hesapTalepTable.getColumnModel().getColumn(0).setResizable(false);
            hesapTalepTable.getColumnModel().getColumn(1).setResizable(false);
            hesapTalepTable.getColumnModel().getColumn(2).setResizable(false);
            hesapTalepTable.getColumnModel().getColumn(3).setResizable(false);
            hesapTalepTable.getColumnModel().getColumn(4).setResizable(false);
            hesapTalepTable.getColumnModel().getColumn(5).setResizable(false);
        }

        jLabel19.setFont(new java.awt.Font("Noto Sans Cond", 1, 18)); // NOI18N
        jLabel19.setText("Hesap Ad");

        hesapAdTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hesapAdTFActionPerformed(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Noto Sans Cond", 1, 18)); // NOI18N
        jLabel20.setText("Hesap Türü");

        hesapTurComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<Seçiniz>"}));
        hesapTurComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hesapTurComboBoxActionPerformed(evt);
            }
        });

        hesapOlusturmaTalepButton.setFont(new java.awt.Font("Open Sans", 1, 10)); // NOI18N
        hesapOlusturmaTalepButton.setText("Hesap Ekleme Talebi");
        hesapOlusturmaTalepButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hesapOlusturmaTalepButtonActionPerformed(evt);
            }
        });

        hesapTalepSilButton.setFont(new java.awt.Font("Open Sans", 1, 10)); // NOI18N
        hesapTalepSilButton.setText("Talep Sil");
        hesapTalepSilButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hesapTalepSilButtonActionPerformed(evt);
            }
        });

        hesapTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Hesap No", "Hesap Adı", "Hesap Türü", "Hesap Bakiyesi"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(hesapTable2);
        if (hesapTable2.getColumnModel().getColumnCount() > 0) {
            hesapTable2.getColumnModel().getColumn(0).setResizable(false);
            hesapTable2.getColumnModel().getColumn(1).setResizable(false);
            hesapTable2.getColumnModel().getColumn(2).setResizable(false);
            hesapTable2.getColumnModel().getColumn(3).setResizable(false);
        }

        hesapSilTalepButton.setFont(new java.awt.Font("Open Sans", 1, 10)); // NOI18N
        hesapSilTalepButton.setText("Hesap Silme Talebi");
        hesapSilTalepButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hesapSilTalepButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel19)
                                .addGap(35, 35, 35))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)))
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(hesapTurComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(hesapAdTF, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(74, 74, 74)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(hesapOlusturmaTalepButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(hesapSilTalepButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 108, Short.MAX_VALUE)
                        .addComponent(hesapTalepSilButton, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(153, 153, 153))))
        );

        jPanel7Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {hesapAdTF, hesapTurComboBox});

        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(hesapAdTF, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(hesapTurComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(hesapTalepSilButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(hesapSilTalepButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(hesapOlusturmaTalepButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(29, 29, 29)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(26, 26, 26))
        );

        jPanel7Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {hesapOlusturmaTalepButton, hesapSilTalepButton});

        jPanel7Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {hesapAdTF, hesapTurComboBox});

        jTabbedPane3.addTab("Hesap Ekle/Sil Talep Oluşturma", jPanel7);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane3)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 453, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Hesap İşlemleri", jPanel3);

        krediTalepTabbedPane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                krediTalepTabbedPaneMouseClicked(evt);
            }
        });

        krediOdemeleriTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Ödeme No", "Kredi No", "Ödenen Ay", "Aylık Taksit", "Gecikme Faizi", "Kalan Borç", "Ödeme Aralığı", "Durum"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(krediOdemeleriTable);

        odemeButton.setFont(new java.awt.Font("Open Sans", 1, 10)); // NOI18N
        odemeButton.setText("Aylık Ödeme Yap");
        odemeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                odemeButtonActionPerformed(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("Noto Sans Cond", 1, 18)); // NOI18N
        jLabel22.setText("Kaynak Hesap");

        hesaplarComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<Seçiniz>"}));
        hesaplarComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hesaplarComboBoxActionPerformed(evt);
            }
        });

        jLabel23.setFont(new java.awt.Font("Noto Sans Cond", 1, 18)); // NOI18N
        jLabel23.setText("Kredi NO");

        krediNoTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                krediNoTFActionPerformed(evt);
            }
        });

        tumBorcButton.setFont(new java.awt.Font("Open Sans", 1, 10)); // NOI18N
        tumBorcButton.setText("Tüm Borcu Öde");
        tumBorcButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tumBorcButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabel22)
                        .addGap(38, 38, 38)
                        .addComponent(hesaplarComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(odemeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(64, 64, 64)
                        .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel11Layout.createSequentialGroup()
                                .addComponent(krediNoTF)
                                .addGap(89, 89, 89))
                            .addGroup(jPanel11Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(tumBorcButton, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 847, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(krediNoTF, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tumBorcButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(odemeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(hesaplarComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 306, Short.MAX_VALUE)
                .addContainerGap())
        );

        krediTalepTabbedPane.addTab("Kredi Borçlarım", jPanel11);

        jLabel3.setFont(new java.awt.Font("Noto Sans Cond", 1, 18)); // NOI18N
        jLabel3.setText("Kredi Miktarı");

        krediTalepMiktarTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                krediTalepMiktarTFActionPerformed(evt);
            }
        });
        krediTalepMiktarTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                krediTalepMiktarTFKeyTyped(evt);
            }
        });

        talepButton.setFont(new java.awt.Font("Open Sans", 1, 10)); // NOI18N
        talepButton.setText("Talep Oluştur");
        talepButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                talepButtonActionPerformed(evt);
            }
        });

        talepTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Talep No", "Temsilci", "Miktar", "Toplam Ay", "Başvuru Durumu"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(talepTable);

        toplamAyTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toplamAyTFActionPerformed(evt);
            }
        });
        toplamAyTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                toplamAyTFKeyTyped(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Noto Sans Cond", 1, 18)); // NOI18N
        jLabel4.setText("Toplam Ay");

        talepSilButton.setFont(new java.awt.Font("Open Sans", 1, 10)); // NOI18N
        talepSilButton.setText("Talep Sil");
        talepSilButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                talepSilButtonActionPerformed(evt);
            }
        });

        jLabel24.setFont(new java.awt.Font("Noto Sans Cond", 1, 18)); // NOI18N
        jLabel24.setText("Kaynak Hesap");

        krediHesapComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<Seçiniz>"}));
        krediHesapComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                krediHesapComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addGap(61, 61, 61)
                                .addComponent(jLabel4)
                                .addGap(39, 39, 39))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(26, 26, 26)))
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(krediTalepMiktarTF, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addComponent(toplamAyTF, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel24)
                                .addGap(10, 10, 10)
                                .addComponent(krediHesapComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(48, 48, 48)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(talepButton, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(talepSilButton, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 806, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        jPanel10Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {talepButton, talepSilButton});

        jPanel10Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {krediTalepMiktarTF, toplamAyTF});

        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(krediTalepMiktarTF, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(toplamAyTF, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(krediHesapComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addComponent(talepButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(talepSilButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jPanel10Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {talepButton, talepSilButton});

        jPanel10Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {krediTalepMiktarTF, toplamAyTF});

        krediTalepTabbedPane.addTab("Kredi Talep Oluşturma", jPanel10);

        odemeGecmisTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Kredi No", "Ödenen Ay", "Ödenen Ana Para", "Ödenen Toplam Faiz", "Ödenen Toplam Tutar", "Ödeme Tarihi"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane7.setViewportView(odemeGecmisTable);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 867, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        krediTalepTabbedPane.addTab("Ödeme Geçmişi", jPanel4);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(krediTalepTabbedPane)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(krediTalepTabbedPane, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        jTabbedPane1.addTab("Kredi İşlemleri", jPanel5);

        islemTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "İşlem No", "Kaynak", "Hedef", "İşlem Türü", "İşlem Tutarı", "Kaynak Bakiye", "Hedef Bakiye", "İşlem Tarihi"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(islemTable);
        if (islemTable.getColumnModel().getColumnCount() > 0) {
            islemTable.getColumnModel().getColumn(1).setHeaderValue("Kaynak");
            islemTable.getColumnModel().getColumn(2).setHeaderValue("Hedef");
            islemTable.getColumnModel().getColumn(5).setHeaderValue("Kaynak Bakiye");
            islemTable.getColumnModel().getColumn(6).setHeaderValue("Hedef Bakiye");
        }

        jTabbedPane1.addTab("İşlem Geçmişi", jScrollPane6);

        jPanel6.setBackground(new java.awt.Color(0, 153, 255));

        tarihLabel.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N

        logoutLabel.setIcon(new javax.swing.ImageIcon("C:\\Users\\takoy\\Desktop\\Proje-3\\mavenproject1\\src\\main\\java\\com\\mycompany\\mavenproject1\\resim\\logout.png")); // NOI18N
        logoutLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutLabelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(30, Short.MAX_VALUE)
                .addComponent(tarihLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addComponent(logoutLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(tarihLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(logoutLabel)
                .addGap(51, 51, 51))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 872, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 479, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 477, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void initProfile() {
        String sorgu = "SELECT *FROM kisi k,musteri m, temsilcinin_musterileri tm where tc_no='" + musteriTc + "' and k.kisi_id=m.kisi_id and m.musteri_id=tm.musteri_id";
        DBislem dbIslem = new DBislem();
        user = dbIslem.getMusteri(sorgu, this);
        this.temsilci_id = user.getMusterinin_temsilci_id();
        
        toplamGelirTF.setText(""+DBislem.getAylikGelir(musteri_id));
        toplamGiderTF.setText(""+DBislem.getMusteriGider(musteri_id));
        
        musteriAdTF.setText(user.getAd());
        musteriSoyadTF.setText(user.getSoyad());
        musteriTcnoTF.setText(user.getTcNo());
        musteriTelefonTF.setText(user.getTelefon());
        musteriMailTF.setText(user.getePosta());
        musteriAdresTF.setText(user.getAdres());
        String bakiye = "" + DBislem.getToplamBakiye(user.getMusteri_id());
        toplamBakiyeTF.setText(bakiye);
        musteriAdTF.setEditable(false);
        musteriSoyadTF.setEditable(false);
        musteriTcnoTF.setEditable(false);
        musteriTelefonTF.setEditable(false);
        musteriMailTF.setEditable(false);
        musteriAdresTF.setEditable(false);
        
        
        TabloIslem.getInstance().showKrediOdemeTable(krediOdemeleriTable, musteri_id, 0, 1);
        TabloIslem.getInstance().showKrediTalepTable(talepTable, this.musteri_id, this.temsilci_id);
    }
    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked
        // TODO add your handling code here:


    }//GEN-LAST:event_jTabbedPane1MouseClicked

    private void krediTalepTabbedPaneMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_krediTalepTabbedPaneMouseClicked
        // TODO add your handling code here:


    }//GEN-LAST:event_krediTalepTabbedPaneMouseClicked

    private void talepSilButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_talepSilButtonActionPerformed
        // TODO add your handling code here:

        if (talepTable.getSelectedRowCount() == 1) {

            TabloIslem.getInstance().deleteRowKrediTalepTable(talepTable, musteri_id, temsilci_id, talepTable.getSelectedRow());
            TabloIslem.getInstance().showKrediTalepTable(talepTable, musteri_id, temsilci_id);
        }

    }//GEN-LAST:event_talepSilButtonActionPerformed

    private void toplamAyTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toplamAyTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_toplamAyTFActionPerformed

    private void talepButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_talepButtonActionPerformed
        // TODO add your handling code here:
        ConnectDB.connect();

        String talepMiktarStr = krediTalepMiktarTF.getText();
        String toplamAyStr = toplamAyTF.getText();
        int talepMiktar = Integer.parseInt(talepMiktarStr);
        int toplamAy = Integer.parseInt(toplamAyStr);
        String krediHesap = krediHesapComboBox.getSelectedItem().toString();
        int hesap_id = DBislem.getID("SELECT * FROM hesaplar WHERE hesap_adi= '" + krediHesap + "'and musteri_id=" + musteri_id, this, "hesap_id");
        String sorgu = "INSERT INTO kredi_basvuru(musteri_id, temsilci_id, istenen_kredi_miktar, onay_durum, toplam_ay,hesap_id) "
                + "VALUES (" + musteri_id + "," + temsilci_id + "," + talepMiktar + ", 'Onay Bekleniyor', " + toplamAy + "," + hesap_id + ")";

        if (hesap_id > 0) {
            DBislem.insertQuery(sorgu);
            TabloIslem.getInstance().showKrediTalepTable(talepTable, user.getMusteri_id(), user.getMusterinin_temsilci_id());
        } else {
            JOptionPane.showMessageDialog(this, "Hesap seçiniz. Eğer TL hesabınız yoksa oluşturunuz.");
        }


    }//GEN-LAST:event_talepButtonActionPerformed

    private void krediTalepMiktarTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_krediTalepMiktarTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_krediTalepMiktarTFActionPerformed

    private void kaynakComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kaynakComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_kaynakComboBoxActionPerformed

    private void islemMiktarTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_islemMiktarTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_islemMiktarTFActionPerformed

    private void paraYatirButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paraYatirButtonActionPerformed
        // TODO add your handling code here:
        double miktar = Double.parseDouble(islemMiktarTF.getText());
        String kaynakHesap = kaynakComboBox.getSelectedItem().toString();
        String sorgu = "UPDATE hesaplar SET hesap_bakiye = hesap_bakiye+" + miktar + " WHERE hesap_adi= '" + kaynakHesap + "' and musteri_id=" + musteri_id;
        DBislem.paraYatir(sorgu);

        TabloIslem.getInstance().showHesapTable(hesapTable, musteri_id);
        String bakiye = "" + DBislem.getToplamBakiye(user.getMusteri_id());
        toplamBakiyeTF.setText(bakiye);
        long fark = DBislem.getTarihFark(Tarih.currentDate);

        Date islemZamani = new Date();
        DateFormat df = new SimpleDateFormat("yyyy/MM/dd");
        int hesap_id = DBislem.getID("SELECT * FROM hesaplar WHERE hesap_adi= '" + kaynakHesap + "'and musteri_id=" + musteri_id, this, "hesap_id");
        double hesap_bakiye = DBislem.getHesapBakiye(hesap_id);
        String sorgu2 = "INSERT INTO islemler(\n"
                + "	hedef_hesap_id, islem_tur_id, islem_tarihi, islem_tutari, hedef_bakiye, musteri_id)\n"
                + "	VALUES (" + hesap_id + ", 2, CURRENT_DATE+ " + fark + "," + miktar + ", " + hesap_bakiye + ", " + musteri_id + ")";
        DBislem.insertQuery(sorgu2);
        TabloIslem.getInstance().showIslemTable(islemTable, musteri_id, 1,0);

    }//GEN-LAST:event_paraYatirButtonActionPerformed

    private void hedefComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hedefComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hedefComboBoxActionPerformed

    private void jTabbedPane3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane3MouseClicked
        // TODO add your handling code here: 
    }//GEN-LAST:event_jTabbedPane3MouseClicked

    private void initHesap() {
        String sorgu = "SELECT * FROM hesaplar WHERE silindi_mi = false and musteri_id=" + musteri_id;
        String sorgu2 = "SELECT * FROM hesap_turu";
        ComboBoxIslem.getComboData(kaynakComboBox, sorgu, "hesap_adi");
        ComboBoxIslem.getComboData(hedefComboBox, sorgu, "hesap_adi");
        ComboBoxIslem.getComboData(hesapTurComboBox, sorgu2, "hesap_tur_adi");
        TabloIslem.getInstance().showHesapTable(hesapTable, musteri_id);
        TabloIslem.getInstance().showHesapTable(hesapTable2, musteri_id);
        TabloIslem.getInstance().showHesapTalepTable(hesapTalepTable, musteri_id, 1);
        String bakiye = "" + DBislem.getToplamBakiye(user.getMusteri_id());
        toplamBakiyeTF.setText(bakiye);
    }

    private void paraCekButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paraCekButtonActionPerformed
        // TODO add your handling code here:
        double miktar = Double.parseDouble(islemMiktarTF.getText());
        String kaynakHesap = kaynakComboBox.getSelectedItem().toString();
        String sorgu = "UPDATE hesaplar SET hesap_bakiye = hesap_bakiye-" + miktar + " WHERE hesap_adi= '" + kaynakHesap + "' and musteri_id=" + musteri_id;
        int kontrol = DBislem.paraCek(sorgu, this);
        TabloIslem.getInstance().showHesapTable(hesapTable, musteri_id);
        String bakiye = "" + DBislem.getToplamBakiye(user.getMusteri_id());
        toplamBakiyeTF.setText(bakiye);
        long fark = DBislem.getTarihFark(Tarih.currentDate);

        if (kontrol != 0) {
            int hesap_id = DBislem.getID("SELECT * FROM hesaplar WHERE hesap_adi= '" + kaynakHesap + "'and musteri_id=" + musteri_id, this, "hesap_id");
            double hesap_bakiye = DBislem.getHesapBakiye(hesap_id);
            String sorgu2 = "INSERT INTO islemler(\n"
                    + "	kaynak_hesap_id, islem_tur_id, islem_tarihi, islem_tutari, kaynak_bakiye, musteri_id)\n"
                    + "	VALUES (" + hesap_id + ", 1, CURRENT_DATE+" + fark + "," + miktar + ", " + hesap_bakiye + ", " + musteri_id + ")";
            DBislem.insertQuery(sorgu2);
            TabloIslem.getInstance().showIslemTable(islemTable, musteri_id, 1,0);
        }

    }//GEN-LAST:event_paraCekButtonActionPerformed

    private void transferButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transferButtonActionPerformed
        // TODO add your handling code here:
        double miktar = Double.parseDouble(islemMiktarTF.getText());
        double cevrilenMiktar = 0;
        double kaynakKurSabiti = 0;
        double hedefKurSabiti = 0;
        String kaynakHesap = kaynakComboBox.getSelectedItem().toString();
        String hedefHesap = hedefComboBox.getSelectedItem().toString();
        long fark = DBislem.getTarihFark(Tarih.currentDate);
        String sorgu3 = "SELECT * FROM para_birim pb, hesaplar h, hesap_turu ht "
                + "WHERE h.hesap_tur_id=ht.hesap_tur_id AND ht.para_birim_id=pb.para_birim_id AND h.hesap_adi= '" + hedefHesap + "'";
        String sorgu4 = "SELECT * FROM para_birim pb, hesaplar h, hesap_turu ht "
                + "WHERE h.hesap_tur_id=ht.hesap_tur_id AND ht.para_birim_id=pb.para_birim_id AND h.hesap_adi= '" + kaynakHesap + "'";
        hedefKurSabiti = DBislem.getKurSabiti(sorgu3, this, "kur_sabiti");
        kaynakKurSabiti = DBislem.getKurSabiti(sorgu4, this, "kur_sabiti");

        cevrilenMiktar = miktar * (kaynakKurSabiti / hedefKurSabiti);

        if (!hedefHesap.equals("<Seçiniz>") && !kaynakHesap.equals("<Seçiniz>")) {
            String sorgu = "UPDATE hesaplar SET hesap_bakiye = hesap_bakiye-" + miktar + " WHERE hesap_adi= '" + kaynakHesap + "' and musteri_id=" + musteri_id;
            int durum = DBislem.paraCek(sorgu, this);

            if (durum != 0) {
                String sorgu2 = "UPDATE hesaplar SET hesap_bakiye = hesap_bakiye+" + cevrilenMiktar + " WHERE hesap_adi= '" + hedefHesap + "' and musteri_id=" + musteri_id;
                DBislem.paraYatir(sorgu2);

                TabloIslem.getInstance().showHesapTable(hesapTable, musteri_id);
                String bakiye = "" + DBislem.getToplamBakiye(user.getMusteri_id());
                toplamBakiyeTF.setText(bakiye);

                Date islemZamani = new Date();
                DateFormat df = new SimpleDateFormat("yyyy/MM/dd");
                //System.out.println(df.format(islemZamani));
                int kaynak_hesap_id = DBislem.getID("SELECT * FROM hesaplar WHERE hesap_adi= '" + kaynakHesap + "'and musteri_id=" + musteri_id, this, "hesap_id");
                int hedef_hesap_id = DBislem.getID("SELECT * FROM hesaplar WHERE hesap_adi= '" + hedefHesap + "'and musteri_id=" + musteri_id, this, "hesap_id");
                double kaynak_bakiye = DBislem.getHesapBakiye(kaynak_hesap_id);
                double hedef_bakiye = DBislem.getHesapBakiye(hedef_hesap_id);
                String sorgu5 = "INSERT INTO islemler(\n"
                        + "	hedef_hesap_id, kaynak_hesap_id, islem_tur_id, islem_tarihi, islem_tutari, kaynak_bakiye, hedef_bakiye, musteri_id)\n"
                        + "	VALUES (" + hedef_hesap_id + ", " + kaynak_hesap_id + ", 3, CURRENT_DATE+ " + fark + "," + miktar + " ," + kaynak_bakiye + " ," + hedef_bakiye + ", " + musteri_id + ")";
                DBislem.insertQuery(sorgu5);
                TabloIslem.getInstance().showIslemTable(islemTable, musteri_id, 1,0);
            }
        }
    }//GEN-LAST:event_transferButtonActionPerformed

    private void hesapAdTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hesapAdTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hesapAdTFActionPerformed

    private void hesapTurComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hesapTurComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hesapTurComboBoxActionPerformed

    private void hesapTalepSilButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hesapTalepSilButtonActionPerformed
        // TODO add your handling code here:      
        DefaultTableModel model = (DefaultTableModel) hesapTalepTable.getModel();

        if (hesapTalepTable.getSelectedRowCount() == 1) {
            String talepId = model.getValueAt(hesapTalepTable.getSelectedRow(), 0).toString();
            String sorgu = "UPDATE  hesap_talep SET silindi_mi=true WHERE hesap_talep_id= " + talepId;
            DBislem.updateQuery(sorgu);
            TabloIslem.getInstance().showHesapTable(hesapTable2, musteri_id);
            TabloIslem.getInstance().showHesapTalepTable(hesapTalepTable, musteri_id, 1);
        } else if (hesapTalepTable.getSelectedRowCount() > 1) {
            JOptionPane.showMessageDialog(this, "Tek seferde maksimum bir adet talep seçebilirsiniz.");
        } else {
            JOptionPane.showMessageDialog(this, "Lütfen silmek istediğiniz talebi seçiniz!");
        }
    }//GEN-LAST:event_hesapTalepSilButtonActionPerformed

    private void jPanel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel7MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel7MouseClicked

    private void hesapOlusturmaTalepButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hesapOlusturmaTalepButtonActionPerformed
        // TODO add your handling code here:

        String hesapAd = hesapAdTF.getText();
        String hesapTur = hesapTurComboBox.getSelectedItem().toString();
        String sorgu2 = "SELECT * FROM hesap_turu WHERE hesap_tur_adi = '" + hesapTur + "'";
        int hesapTurID = DBislem.getID(sorgu2, this, "hesap_tur_id");

        String sorgu = "INSERT INTO hesap_talep(musteri_id, temsilci_id, hesap_adi, hesap_tur_id, onay_durum) VALUES (" + musteri_id + "," + temsilci_id + ",'" + hesapAd + "', " + hesapTurID + ", 'Onay Bekleniyor')";
        DBislem.insertQuery(sorgu);

        TabloIslem.getInstance().showHesapTable(hesapTable2, musteri_id);
        TabloIslem.getInstance().showHesapTalepTable(hesapTalepTable, musteri_id, 1);


    }//GEN-LAST:event_hesapOlusturmaTalepButtonActionPerformed

    private void hesapSilTalepButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hesapSilTalepButtonActionPerformed
        // TODO add your handling code here:

        DefaultTableModel model = (DefaultTableModel) hesapTable2.getModel();

        if (hesapTable2.getSelectedRowCount() == 1) {
            String hesapBakiye = model.getValueAt(hesapTable2.getSelectedRow(), 3).toString();

            if (Double.parseDouble(hesapBakiye) == 0) {
                String hesapId = model.getValueAt(hesapTable2.getSelectedRow(), 0).toString();
                String hesapAd = model.getValueAt(hesapTable2.getSelectedRow(), 1).toString();
                String hesapTur = model.getValueAt(hesapTable2.getSelectedRow(), 2).toString();
                String sorgu2 = "SELECT * FROM hesap_turu WHERE hesap_tur_adi = '" + hesapTur + "'";
                int hesapTurID = DBislem.getID(sorgu2, this, "hesap_tur_id");
                String sorgu = "INSERT INTO hesap_talep(hesap_id, musteri_id, temsilci_id, hesap_adi, hesap_tur_id, onay_durum) "
                        + "VALUES (" + hesapId + "," + musteri_id + "," + temsilci_id + ",'" + hesapAd + "', " + hesapTurID + ", 'Onay Bekleniyor')";
                DBislem.insertQuery(sorgu);
                TabloIslem.getInstance().showHesapTable(hesapTable2, musteri_id);
                TabloIslem.getInstance().showHesapTalepTable(hesapTalepTable, musteri_id, 1);
            } else {
                JOptionPane.showMessageDialog(this, "Bakiye 0'dan farklı.\n Hesap silinmek için uygun değil.");
            }

        } else if (hesapTable2.getSelectedRowCount() > 1) {
            JOptionPane.showMessageDialog(this, "Tek seferde maksimum bir adet hesap seçebilirsiniz.");
        } else {
            JOptionPane.showMessageDialog(this, "Lütfen silmek istediğiniz hesabı seçiniz!");
        }
    }//GEN-LAST:event_hesapSilTalepButtonActionPerformed

    private void kaydetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kaydetButtonActionPerformed
        // TODO add your handling code here:
        String ad = musteriAdTF.getText();
        String soyad = musteriSoyadTF.getText();
        String tc = musteriTcnoTF.getText();
        String tel = musteriTelefonTF.getText();
        String mail = musteriMailTF.getText();
        String adres = musteriAdresTF.getText();

        String sorgu = "UPDATE kisi\n"
                + "	SET ad='" + ad + "', soyad='" + soyad + "', tc_no='" + tc + "', telefon='" + tel + "', e_posta='" + mail + "', adres='" + adres + "'\n"
                + "	WHERE tc_no='" + musteriTc + "'";
        DBislem.updateQuery(sorgu);
        musteriTc = tc; // eger musteriTc degistirilirse classtakini de guncelle
        musteri_id = user.getMusteri_id();
        musteriAdTF.setEditable(false);
        musteriSoyadTF.setEditable(false);
        musteriTcnoTF.setEditable(false);
        musteriTelefonTF.setEditable(false);
        musteriMailTF.setEditable(false);
        musteriAdresTF.setEditable(false);
    }//GEN-LAST:event_kaydetButtonActionPerformed

    private void duzenleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_duzenleButtonActionPerformed
        // TODO add your handling code here:

        musteriAdTF.setEditable(true);
        musteriSoyadTF.setEditable(true);
        musteriTcnoTF.setEditable(true);
        musteriTelefonTF.setEditable(true);
        musteriMailTF.setEditable(true);
        musteriAdresTF.setEditable(true);
    }//GEN-LAST:event_duzenleButtonActionPerformed

    private void musteriTcnoTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_musteriTcnoTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_musteriTcnoTFActionPerformed

    private void musteriAdTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_musteriAdTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_musteriAdTFActionPerformed

    private void musteriMailTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_musteriMailTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_musteriMailTFActionPerformed


    private void odemeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_odemeButtonActionPerformed
        // TODO add your handling code here:       
        DefaultTableModel model = (DefaultTableModel) krediOdemeleriTable.getModel();
        if (krediOdemeleriTable.getSelectedRowCount() == 1) {
            if (model.getValueAt(krediOdemeleriTable.getSelectedRow(), 7).toString().equals("Ödenmedi")) {

                String hesap = hesaplarComboBox.getSelectedItem().toString();
                String kredi_odeme_id = model.getValueAt(krediOdemeleriTable.getSelectedRow(), 0).toString();
                String kredi_id = model.getValueAt(krediOdemeleriTable.getSelectedRow(), 1).toString();
                double miktar;
                double cevrilenMiktar;
                String sorgu = "SELECT * FROM para_birim pb, hesaplar h, hesap_turu ht "
                        + "WHERE h.hesap_tur_id=ht.hesap_tur_id AND ht.para_birim_id=pb.para_birim_id AND h.hesap_adi= '" + hesap + "'";
                double kaynakKurSabiti = DBislem.getKurSabiti(sorgu, this, "kur_sabiti");
                String aralik = model.getValueAt(krediOdemeleriTable.getSelectedRow(), 6).toString();
                int durum = DBislem.getTarihDurum(aralik);
                long fark = DBislem.getTarihFark(Tarih.currentDate);
                String sorgu2 = "";
                String sorgu3 = "";
                String sorgu4 = "";
                String sorgu5 = "";

                if (durum == 1) {//İşlem Zamanı ödeme aralığında ise (Normal Faiz)
                    miktar = Double.parseDouble(model.getValueAt(krediOdemeleriTable.getSelectedRow(), 5).toString());
                    cevrilenMiktar = miktar * (1.0 / kaynakKurSabiti); // TL çevirme
                    sorgu2 = "UPDATE hesaplar SET hesap_bakiye = hesap_bakiye-" + cevrilenMiktar + " "
                            + "WHERE hesap_adi= '" + hesap + "' and musteri_id=" + musteri_id;

                    int cekildiMi = DBislem.paraCek(sorgu2, this);
                    if (cekildiMi == 1) {
                        int hesap_id = DBislem.getID("SELECT * FROM hesaplar WHERE hesap_adi= '" + hesap + "'and musteri_id=" + musteri_id, this, "hesap_id");
                        double hesap_bakiye = DBislem.getHesapBakiye(hesap_id);
                        sorgu3 = "INSERT INTO islemler(\n"
                                + " kaynak_hesap_id, islem_tur_id, islem_tarihi, islem_tutari, kaynak_bakiye, musteri_id)\n"
                                + " VALUES (" + hesap_id + ", 5, CURRENT_DATE+" + fark + "," + cevrilenMiktar + ", " + hesap_bakiye + ", " + musteri_id + ")";
                        DBislem.insertQuery(sorgu3);
                        sorgu4 = "UPDATE kredi_odeme SET odeme_tarih = CURRENT_DATE+" + fark + ",kalan_aylik_borc= kalan_aylik_borc - " + cevrilenMiktar
                                + " WHERE kredi_odeme_id = " + kredi_odeme_id;
                        DBislem.updateQuery(sorgu4);
                        if (DBislem.getKalanBorc(kredi_odeme_id) == 0.0) {
                            sorgu5 = "UPDATE kredi_odeme SET odendi_mi = true"
                                    + " WHERE kredi_odeme_id = " + kredi_odeme_id;
                            DBislem.updateQuery(sorgu5);
                        }
                        TabloIslem.getInstance().showIslemTable(islemTable, musteri_id, 1,0);
                    }

                } else if (durum == 2) {//İşlem Zamanı ödemenin başlangıcından önceyse (Faiz almıyoruz)

                    miktar = DBislem.getFaizsiz(kredi_id);
                    cevrilenMiktar = miktar * (1.0 / kaynakKurSabiti); // TL çevirme

                    sorgu2 = "UPDATE hesaplar SET hesap_bakiye = hesap_bakiye-" + cevrilenMiktar + " "
                            + "WHERE hesap_adi= '" + hesap + "' and musteri_id=" + musteri_id;

                    int cekildiMi = DBislem.paraCek(sorgu2, this);
                    if (cekildiMi == 1) {
                        int hesap_id = DBislem.getID("SELECT * FROM hesaplar WHERE hesap_adi= '" + hesap + "'and musteri_id=" + musteri_id, this, "hesap_id");
                        double hesap_bakiye = DBislem.getHesapBakiye(hesap_id);
                        sorgu3 = "INSERT INTO islemler(\n"
                                + " kaynak_hesap_id, islem_tur_id, islem_tarihi, islem_tutari, kaynak_bakiye, musteri_id)\n"
                                + " VALUES (" + hesap_id + ", 5, CURRENT_DATE+" + fark + "," + cevrilenMiktar + ", " + hesap_bakiye + ", " + musteri_id + ")";
                        DBislem.insertQuery(sorgu3);
                        sorgu4 = "UPDATE kredi_odeme SET odeme_tarih = CURRENT_DATE+" + fark + ", aylik_borc=" + miktar + " ,kalan_aylik_borc= 0"
                                + " WHERE kredi_odeme_id = " + kredi_odeme_id;
                        DBislem.updateQuery(sorgu4);
                        if (DBislem.getKalanBorc(kredi_odeme_id) == 0.0) {
                            sorgu5 = "UPDATE kredi_odeme SET odendi_mi = true"
                                    + " WHERE kredi_odeme_id = " + kredi_odeme_id;
                            DBislem.updateQuery(sorgu5);
                        }
                        TabloIslem.getInstance().showIslemTable(islemTable, musteri_id, 1,0);
                    }

                } else if (durum == 3) {//İşlem Zamanı ödemenin son tarihini geçmiş ise (Faiz+Gecikme Faizi)
                    double kalanBorc = Double.parseDouble(model.getValueAt(krediOdemeleriTable.getSelectedRow(), 5).toString());
                    double gecikmeFaiz = Double.parseDouble(model.getValueAt(krediOdemeleriTable.getSelectedRow(), 4).toString());
                    miktar = kalanBorc + gecikmeFaiz;
                    cevrilenMiktar = miktar * (1.0 / kaynakKurSabiti); // TL çevirme

                    sorgu2 = "UPDATE hesaplar SET hesap_bakiye = hesap_bakiye-" + cevrilenMiktar + " "
                            + "WHERE hesap_adi= '" + hesap + "' and musteri_id=" + musteri_id;

                    int cekildiMi = DBislem.paraCek(sorgu2, this);
                    if (cekildiMi == 1) {
                        int hesap_id = DBislem.getID("SELECT * FROM hesaplar WHERE hesap_adi= '" + hesap + "'and musteri_id=" + musteri_id, this, "hesap_id");
                        double hesap_bakiye = DBislem.getHesapBakiye(hesap_id);
                        sorgu3 = "INSERT INTO islemler(\n"
                                + " kaynak_hesap_id, islem_tur_id, islem_tarihi, islem_tutari, kaynak_bakiye, musteri_id)\n"
                                + " VALUES (" + hesap_id + ", 5, CURRENT_DATE+" + fark + " ," + cevrilenMiktar + ", " + hesap_bakiye + ", " + musteri_id + ")";
                        DBislem.insertQuery(sorgu3);
                        sorgu4 = "UPDATE kredi_odeme SET gecikme_zammi=" + gecikmeFaiz + ",odeme_tarih = CURRENT_DATE+" + fark + ",kalan_aylik_borc= 0"
                                + " WHERE kredi_odeme_id = " + kredi_odeme_id;
                        DBislem.updateQuery(sorgu4);
                        if (DBislem.getKalanBorc(kredi_odeme_id) == 0.0) {
                            sorgu5 = "UPDATE kredi_odeme SET odendi_mi = true"
                                    + " WHERE kredi_odeme_id = " + kredi_odeme_id;
                            DBislem.updateQuery(sorgu5);
                        }
                        TabloIslem.getInstance().showIslemTable(islemTable, musteri_id, 1,0);

                    }

                }

            } else {
                JOptionPane.showMessageDialog(this, "Seçilen ödeme daha önceden ödenmiştir.");
            }

        } else {
            JOptionPane.showMessageDialog(this, "Lütfen tablodan yalnızca 1 adet ödeme seçiniz.");
        }

        TabloIslem.getInstance().showKrediOdemeTable(krediOdemeleriTable, musteri_id, 0, 1);
        TabloIslem.getInstance().showKrediOdemeGecmisTable(odemeGecmisTable, musteri_id);
        TabloIslem.getInstance().showHesapTable(hesapTable, musteri_id);
        toplamGiderTF.setText(""+DBislem.getMusteriGider(musteri_id));

    }//GEN-LAST:event_odemeButtonActionPerformed

    private void hesaplarComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hesaplarComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hesaplarComboBoxActionPerformed

    private void krediNoTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_krediNoTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_krediNoTFActionPerformed

    private void tumBorcButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tumBorcButtonActionPerformed
        // TODO add your handling code here:
        //  Tarih.getInstance().tarihiIleriAl();
        String hesap = hesaplarComboBox.getSelectedItem().toString();
        String sorgu = "SELECT * FROM para_birim pb, hesaplar h, hesap_turu ht "
                + "WHERE h.musteri_id =" + musteri_id + " AND h.hesap_tur_id=ht.hesap_tur_id AND ht.para_birim_id=pb.para_birim_id AND h.hesap_adi= '" + hesap + "'";
        String sorgu2 = "SELECT * FROM hesaplar WHERE hesap_adi = '" + hesap + "' AND musteri_id = " + musteri_id;

        int hesap_id = DBislem.getID(sorgu2, this, "hesap_id");
        double kaynakKurSabiti = DBislem.getKurSabiti(sorgu, this, "kur_sabiti");
        tarihLabel.setText(Tarih.myFormat.format(Tarih.getAnlikTarih()));
        TabloIslem.getInstance().showKrediOdemeTable(krediOdemeleriTable, musteri_id, 0, 1);
        int kredi_no = Integer.parseInt(krediNoTF.getText());
        ArrayList<KrediOdeme> krediOdemeList = TabloIslem.getInstance().getAllKrediOdeme(musteri_id, kredi_no, 2);
        double toplamBorc = 0.0;
        double cevrilenToplamBorc = 0.0;
        long fark = DBislem.getTarihFark(Tarih.currentDate);
        for (int i = 0; i < krediOdemeList.size(); i++) {
            toplamBorc = toplamBorc
                    + krediOdemeList.get(i).getKalan_aylik_borc()
                    + krediOdemeList.get(i).getGecikme_zammi();
        }
        cevrilenToplamBorc = toplamBorc * (1.0 / kaynakKurSabiti); // TL çevirme 
        double hesap_bakiye = DBislem.getHesapBakiye(hesap_id);
        if (hesap_bakiye >= cevrilenToplamBorc) {
            String sorgu3 = "UPDATE hesaplar SET hesap_bakiye = hesap_bakiye-" + cevrilenToplamBorc + " "
                    + "WHERE hesap_id = " + hesap_id + " and musteri_id=" + musteri_id;
            DBislem.paraCek(sorgu3, this);
            hesap_bakiye = DBislem.getHesapBakiye(hesap_id);
            String sorgu4 = "INSERT INTO islemler(\n"
                    + " kaynak_hesap_id, islem_tur_id, islem_tarihi, islem_tutari, kaynak_bakiye, musteri_id)\n"
                    + " VALUES (" + hesap_id + ", 5, CURRENT_DATE+" + fark + "," + cevrilenToplamBorc + ", " + hesap_bakiye + ", " + musteri_id + ")";
            DBislem.insertQuery(sorgu4);
            String sorgu5 = "UPDATE kredi_odeme SET aylik_borc =" + DBislem.getFaizsiz(krediNoTF.getText()) + " , odendi_mi = true, odeme_tarih = CURRENT_DATE+" + fark + ",kalan_aylik_borc= 0"
                    + " WHERE odendi_mi= false and kredi_id = " + kredi_no;
            DBislem.updateQuery(sorgu5);
            JOptionPane.showMessageDialog(this, "Ödenen toplam borç: " + cevrilenToplamBorc + " = " + toplamBorc + " TL)");
            TabloIslem.getInstance().showKrediOdemeTable(krediOdemeleriTable, musteri_id, 0, 1);
            TabloIslem.getInstance().showKrediOdemeGecmisTable(odemeGecmisTable, musteri_id);
            TabloIslem.getInstance().showIslemTable(islemTable, musteri_id, 1,0);
            TabloIslem.getInstance().showHesapTable(hesapTable, musteri_id);
            toplamGiderTF.setText(""+DBislem.getMusteriGider(musteri_id));

        } else {
            JOptionPane.showMessageDialog(this, "Hesap bakiyesi yetersiz!\n"
                    + " (Hesaplanan toplam borç: " + cevrilenToplamBorc + " = " + toplamBorc + " TL)");
        }
    }//GEN-LAST:event_tumBorcButtonActionPerformed

    private void krediHesapComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_krediHesapComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_krediHesapComboBoxActionPerformed

    private void logoutLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutLabelMouseClicked
        // TODO add your handling code here:
        dispose();
        Login newLogin = new Login();
    }//GEN-LAST:event_logoutLabelMouseClicked

    private void musteriAdTFKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_musteriAdTFKeyTyped
        // TODO add your handling code here:
        char girilenKarakter = evt.getKeyChar();
        if (Character.isDigit(girilenKarakter)) {
            evt.consume();
        }
    }//GEN-LAST:event_musteriAdTFKeyTyped

    private void musteriSoyadTFKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_musteriSoyadTFKeyTyped
        // TODO add your handling code here:
        char girilenKarakter = evt.getKeyChar();
        if (Character.isDigit(girilenKarakter)) {
            evt.consume();
        }
    }//GEN-LAST:event_musteriSoyadTFKeyTyped

    private void musteriTelefonTFKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_musteriTelefonTFKeyTyped
        // TODO add your handling code here:

        char girilenKarakter = evt.getKeyChar();
        if (!Character.isDigit(girilenKarakter)
                || musteriTelefonTF.getText().length() > 9) {
            evt.consume();
        }
    }//GEN-LAST:event_musteriTelefonTFKeyTyped

    private void musteriTcnoTFKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_musteriTcnoTFKeyTyped
        // TODO add your handling code here:
        char girilenKarakter = evt.getKeyChar();
        if (!Character.isDigit(girilenKarakter)
                || musteriTcnoTF.getText().length() > 10) {
            evt.consume();
        }

    }//GEN-LAST:event_musteriTcnoTFKeyTyped

    private void musteriTelefonTFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_musteriTelefonTFKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_musteriTelefonTFKeyPressed

    private void islemMiktarTFKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_islemMiktarTFKeyTyped
        // TODO add your handling code here:
                char girilenKarakter = evt.getKeyChar();
        if (!Character.isDigit(girilenKarakter)) {
            if (girilenKarakter != '.' || islemMiktarTF.getText().contains(".")) {
                evt.consume();
            }
        }
        
        
    }//GEN-LAST:event_islemMiktarTFKeyTyped

    private void krediTalepMiktarTFKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_krediTalepMiktarTFKeyTyped
        // TODO add your handling code here:
                char girilenKarakter = evt.getKeyChar();
        if (!Character.isDigit(girilenKarakter)) { 
                evt.consume();
            
        }
    }//GEN-LAST:event_krediTalepMiktarTFKeyTyped

    private void toplamAyTFKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_toplamAyTFKeyTyped
        // TODO add your handling code here:
                        char girilenKarakter = evt.getKeyChar();
        if (!Character.isDigit(girilenKarakter)) { 
                evt.consume();
        }
    }//GEN-LAST:event_toplamAyTFKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Musteri.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Musteri.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Musteri.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Musteri.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Musteri().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton duzenleButton;
    private javax.swing.JComboBox<String> hedefComboBox;
    private javax.swing.JTextField hesapAdTF;
    private javax.swing.JButton hesapOlusturmaTalepButton;
    private javax.swing.JButton hesapSilTalepButton;
    private javax.swing.JTable hesapTable;
    private javax.swing.JTable hesapTable2;
    private javax.swing.JButton hesapTalepSilButton;
    private javax.swing.JTable hesapTalepTable;
    private javax.swing.JComboBox<String> hesapTurComboBox;
    private javax.swing.JComboBox<String> hesaplarComboBox;
    private javax.swing.JTextField islemMiktarTF;
    private javax.swing.JTable islemTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollBar jScrollBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JButton kaydetButton;
    private javax.swing.JComboBox<String> kaynakComboBox;
    private javax.swing.JComboBox<String> krediHesapComboBox;
    private javax.swing.JTextField krediNoTF;
    private javax.swing.JTable krediOdemeleriTable;
    private javax.swing.JTextField krediTalepMiktarTF;
    private javax.swing.JTabbedPane krediTalepTabbedPane;
    private javax.swing.JLabel logoutLabel;
    private javax.swing.JTextField musteriAdTF;
    private javax.swing.JTextField musteriAdresTF;
    private javax.swing.JTextField musteriMailTF;
    private javax.swing.JTextField musteriSoyadTF;
    private javax.swing.JTextField musteriTcnoTF;
    private javax.swing.JTextField musteriTelefonTF;
    private javax.swing.JButton odemeButton;
    private javax.swing.JTable odemeGecmisTable;
    private javax.swing.JButton paraCekButton;
    private javax.swing.JButton paraYatirButton;
    private javax.swing.JButton talepButton;
    private javax.swing.JButton talepSilButton;
    private javax.swing.JTable talepTable;
    private javax.swing.JLabel tarihLabel;
    private javax.swing.JTextField toplamAyTF;
    private javax.swing.JTextField toplamBakiyeTF;
    private javax.swing.JTextField toplamGelirTF;
    private javax.swing.JTextField toplamGiderTF;
    private javax.swing.JButton transferButton;
    private javax.swing.JButton tumBorcButton;
    // End of variables declaration//GEN-END:variables
}
